{"name":"Wsh","tagline":"A tool that allows you to securely run commands on multiple hosts","body":"# wsh\r\n\r\nwsh is a shell-like program made for sysadmins that need to administer\r\nseveral machines at once. With wsh, you can `ssh` into multiple\r\nmachines and run one-off commands very simply\r\n\r\n## What wsh isn't\r\n\r\n* configuration management \r\n* a shell \r\n* an `ssh` replacement\r\n\r\n## Dependencies\r\n\r\n* `glib2`\r\n* `libssh` (**NOT** libssh2) \r\n* `protobuf-c`\r\n* `sudo`\r\n\r\n### Build deps\r\n\r\n* `cmake`\r\n* c compiler (`gcc`/`clang`) \r\n* `make`/`ninja`\r\n\r\n## Architecture\r\n\r\n`wshd` is a program that resides on remote hosts. `wshc` ssh's into\r\nthem, honoring your ssh config and exec's `wshd`. Over the secure ssh\r\npipe, `wshc` issues instructions to `wshd`, and `wshd` executes them on\r\nthe remote host. If privileges need to be raised, `wshc` will prompt\r\nyou for creds prior to ssh'ing, and submit them once the ssh\r\nconnection has been established.\r\n\r\n## Advantages\r\n\r\n* configuration-less\r\n\r\nwsh honors your existing `ssh` and `sudo` configuration files, leaving\r\nall of the work of authorization and authentication to `ssh` and `sudo`\r\n\r\n* sudo-ready\r\n\r\nUnlike `dsh`, wsh has `sudo` support built in, so that you don't need\r\nto use some kind of hack to get your `sudo` creds over the network.\r\n\r\n* logging\r\n\r\nwsh logs everything to syslog\r\n\r\n","google":"UA-11164924-5","note":"Don't delete this file! It's used internally to help with page regeneration."}